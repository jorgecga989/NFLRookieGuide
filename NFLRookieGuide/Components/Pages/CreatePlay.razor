@page "/createPlay"
@using NFLRookieGuide.Context
@using NFLRookieGuide.Model
@inject PlayProvider PlayProvider
@inject PositionProvider PositionProvider

<h3 style="text-align:center">Create Play</h3>

<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

<div class="container my-5">
    <div class="row justify-content-center">
        @for (int i = 1; i <= 10; i++)
        {
            <div class="col-md-2 mb-4 d-flex justify-content-center">
                <div class="card text-center" style="width: 300px; height: 300px; border: 2px solid #333;">
                    <div class="card-body d-flex flex-column justify-content-center">
                        <h5 class="card-title mb-3">Position @i</h5>
                        <div class="dropdown mt-3">
                            <button class="btn btn-primary btn-sm dropdown-toggle d-flex justify-content-center" style="width: 100%;" type="button" id="dropdownMenuButton@i" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Choose Position
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton@i">
                                <a class="dropdown-item" href="#">Quarterback</a>
                                <a class="dropdown-item" href="#">Running Back</a>
                                <a class="dropdown-item" href="#">Wide Reciever 1</a>
                                <a class="dropdown-item" href="#">Wide Receiver 2</a>
                                <a class="dropdown-item" href="#">Tight End</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @* Break after five boxes to start a new row *@
            @if (i % 5 == 0)
            {
                <div class="w-100"></div>
            }
        }
    </div>
</div>
        
 
@code {
    private IEnumerable<Position> positions;
    private IEnumerable<Play> plays;

    protected override async Task OnInitializedAsync()
    {
        positions = await PositionProvider.GetAllPositionsAsync();
        plays = await PlayProvider.GetAllPlaysAsync();
    } //gets teams from the database through the provider


}
