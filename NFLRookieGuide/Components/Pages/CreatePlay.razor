@page "/createPlay"
@using NFLRookieGuide.Context
@using NFLRookieGuide.Model
@inject PlayProvider PlayProvider
@inject PositionProvider PositionProvider
@inject NavigationManager NavigationManager

<h3 style="text-align:center">Create Play</h3>
@* 
<div class="container my-5">
    <div class="row justify-content-center">
        @for (int i = 1; i <= 10; i++)
        {
            <div class="col-md-2 mb-4 d-flex justify-content-center">
                <div class="card text-center" style="width: 300px; height: 300px; border: 2px solid #333;">
                    <div class="card-body d-flex flex-column justify-content-center">
                        <h5 class="card-title mb-3">Slot @i</h5>
                        <div class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                @(selectedPositions.ContainsKey(i) ? selectedPositions[i].Name : "Select")
                            </button>
                            <ul class="dropdown-menu">
                                @foreach (var position in availablePositions)
                                {
                                    <li>
                                        <button class="dropdown-item" type="button"
                                                @onclick="() => TogglePosition(i, position)">
                                            @position.Name
                                        </button>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            @if (i % 5 == 0)
            {
                <div class="w-100"></div>
            }
        }
    </div>
    <button class="btn btn-secondary" type="button" style="float: right;">Save</button>
</div>
 *@
@*  Rehister form below
 *@
@* <div class="card">
    <div class="card-body bg-light">
        <h4 class="card-title">Register</h4>

        <EditForm OnValidSubmit="SavePlay" Model="Slots" FormName="slotForm">
            <DataAnnotationsValidator />

            <div class="row g-3">
                <div class="col-md-12">
                    <label for="slot1" class="form-label">Slot 1</label>
                    <InputText class="form-control" placeholder="Slot1" @bind-Value="slots.Slot1" />
                    <div class="small">
                        <ValidationMessage For="@(() => slots!.Slot1)" />
                    </div>
                </div>
                <div class="col-md-6">
                    <label for="password" class="form-label">Password</label>
                    <InputText type="password" class="form-control" placeholder="Password" @bind-Value="slots.Slot2" />
                    <div class="small">
                        <ValidationMessage For="@(() => Model!.Password)" />
                    </div>
                </div>
                <div class="col-md-6">
                    <label for="name" class="form-label">Confirm Password</label>
                    <InputText type="password" class="form-control" placeholder="Confirm Password" @bind-Value="slots.Slot3" />
                    <div class="small">
                        <ValidationMessage For="@(() => Model!.ConfirmPassword)" />
                    </div>
                </div>
                <div class="col-md-6">
                    <label for="name" class="form-label">First Name</label>
                    <InputText class="form-control" placeholder="FirstName" @bind-Value="slots.Slot4" />
                    <div class="small">
                        <ValidationMessage For="@(() => Model!.FirstName)" />
                    </div>
                </div>
                <div class="col-md-6">
                    <label for="name" class="form-label">Last Name</label>
                    <InputText class="form-control" placeholder="LastName" @bind-Value="slots.Slot5" />
                    <div class="small">
                        <ValidationMessage For="@(() => Model!.LastName)" />
                    </div>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">Register</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>
 *@
@code {

    private EditContext editContext;

    [SupplyParameterFromForm]
    private Slots slots { get; set; } = new();

    private IEnumerable<Position> positions;

    protected override async Task OnInitializedAsync()
    {
        positions = await PositionProvider.GetAllPositionsAsync();
    }

    private async Task SavePlay()
    {
       // NavigationManager.NavigateTo("/roster_create");
    }


    public sealed class Slots
    {
        public int? Slot1 { get; set; }
        public int? Slot2 { get; set; }
        public int? Slot3 { get; set; }
        public int? Slot4 { get; set; }
        public int? Slot5 { get; set; }
        public int? Slot6 { get; set; }
        public int? Slot7 { get; set; }
        public int? Slot8 { get; set; }
        public int? Slot9 { get; set; }
        public int? Slot10 { get; set; }
    }
}
