@page "/Info/{id:int}"
@using NFLRookieGuide.Context
@using NFLRookieGuide.Model
@inject TeamProvider TeamProvider
@inject NavigationManager NavigationManager

<PageTitle>Info - @chosenTeam?.Name</PageTitle>

<head>
    <title>W3.CSS Template</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <style>
        body, h1, h2, h3, h4, h5, h6 {
            font-family: "Lato", sans-serif
        }

        .w3-bar, h1, button {
            font-family: "Montserrat", sans-serif
        }

        .fa-anchor, .fa-coffee {
            font-size: 200px
        }
    </style>
</head>

@if (teams is null)
{
    <h4>No team found for that id</h4>
}
else
{
    <header class="w3-container w3-red w3-center" style="padding:80px 16px">
        <h1 class="w3-margin w3-jumbo">@chosenTeam?.Name</h1>
    </header>
    <div>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/teams">Teams</a></li>
                <li class="breadcrumb-item active" aria-current="page">@chosenTeam!.Name</li>
            </ol>
        </nav>
    </div>
}
 


@code {
    [Parameter]
    public int Id { get; set; }

    private Team? chosenTeam;

    private IEnumerable<Team> teams;

    protected override async Task OnInitializedAsync()
    {
        teams = await TeamProvider.GetAllTeamsAsync();
        chosenTeam = teams.SingleOrDefault(p => p.Id == Id);
    }
}
