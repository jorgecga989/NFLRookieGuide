@page "/rosterPlay/{id:int}"
@using Microsoft.EntityFrameworkCore
@using NFLRookieGuide.Context
@using NFLRookieGuide.Model
@inject PlayProvider PlayProvider
@inject RosterPlayProvider RosterPlayProvider
@inject NavigationManager NavigationManager

<h1 style="text-align:center">Pick your players</h1>
<h3 style="text-align:center">@chosenPlay.Name</h3>
<div class="container my-5">
    <div class="row justify-content-center">
        @for (int i = 1; i <= 10; i++)
        {
            <div class="col-md-2 mb-4 d-flex justify-content-center">
                <div class="card text-center" style="width: 300px; height: 300px; border: 2px solid #333;">
                    <div class="card-body d-flex flex-column justify-content-center">
                        <h5 class="card-title mb-3">Slot @i</h5>
                        <div class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                               
                            </button>
                            <ul class="dropdown-menu">
                    
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            @if (i % 5 == 0)
            {
                <div class="w-100"></div>
            }
        }
    </div>
    <button class="btn btn-secodary" type="button">Save</button>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private IEnumerable<Play> plays;

    private Play? chosenPlay;

    protected override async Task OnInitializedAsync()
    {
        plays = await PlayProvider.GetAllPlaysAsync();
        chosenPlay = plays.SingleOrDefault(p => p.Id == Id);
    } //gets plays from the database 

    // private async Task CreateRosterPlay()
    // {
    //     var rosterPlay = new RosterPlay
    //         {
    //             Play = play  // Assign the current Play object to the RosterPlay
    //         };

    //     await RosterPlayProvider.AddRosterPlayAsync(rosterPlay);
    // }
}
